题目：
Given an array of strings, group anagrams together.

Example:

Input: ["eat", "tea", "tan", "ate", "nat", "bat"],
Output:
[
  ["ate","eat","tea"],
  ["nat","tan"],
  ["bat"]
]

Note:

    All inputs will be in lowercase.
    The order of your output does not matter.


我的答案：
class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        if (strs.length == 0) return new ArrayList();
        Map<String, List> map = new HashMap<>();
        int[] count = new int[26];
        for (String s : strs){
            Arrays.fill(count, 0);
            for (char c : s.toCharArray()){
                count[c - 'a']++;
            }
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < 26; i++){
                sb.append(count[i]);
            }
            String key = sb.toString();
            if (!map.containsKey(key)){
                map.put(key, new ArrayList());
            }
            map.get(key).add(s);
        }
        return new ArrayList(map.values());
    }
}

Runtime: 11 ms, faster than 60.72% of Java online submissions for Group Anagrams.
Memory Usage: 42.7 MB, less than 69.55% of Java online submissions for Group Anagrams.
